
var express = require('express');
var router  = express.Router();

var fs      = require("fs");
var func    = require('../core/func');
var logger  = require('../core/util/logger');
var rest    = require('../core/restUrl').urls;
var utils   = require('../core/util/utils');
var http   = require('../core/util/http');
var httpClient   = require('../core/util/httpClient').DHttpUtil;

var PAGE_SIZE = 10 ;

router.get('/devicepage', function(req, res, next) {

	var uid = req.session.user.uid;


	var currentPage = req.query.currentPage;
	if (currentPage == undefined || currentPage=='') {
		currentPage = 1;
	}

	var data ={}
	data.PRO_MENU = {"menu":"error","subMenu":"errorDevice"};
	data.currentPage = currentPage;
	data.code = 0 ;
	data.name ='';

	var body = {
		uid:uid,
		currentPage:currentPage,
		pageSize:PAGE_SIZE,
	};

	var restFulPotion = {
		host : rest.emomoYunkong.host,
		port : rest.emomoYunkong.port,
		path : rest.emomoYunkong.errorDevice,
		body : JSON.stringify(body)
	}

	http.doPost(restFulPotion,function(status,d){
	
		if(d!= undefined && status == 200 && d.code == "0"){
			data.data = d.data;
			data.totalPages = d.data.totalPages;
			res.render("errorDevice",data);
		}else{
			utils.pageMessage(req,res,d.mes,"/error/devicepage","error","errorDevice");
		}
	});
});

router.post('/devicepage', function(req, res, next) {

	console.log(req.body);
	var uid = req.session.user.uid;

	var currentPage = req.body.currentPage;
	var name = req.body.name;

	var data ={}
	data.PRO_MENU = {"menu":"error","subMenu":"errorDevice"};
	data.currentPage = currentPage;
	data.code =req.body.code ;
	data.name =req.body.name;

	var body = {
		uid:uid,
		currentPage:currentPage,
		pageSize:PAGE_SIZE,
	};


	if (name!='') {
	    var code	=parseInt(req.body.code)
		switch(code){
			case 0:
            	break;
        	case 1: 
            	body.regionName =name; 
            	break;
        	case 2:
            	body.devNumber =name; 
            	break;
		}
	}

	var restFulPotion = {
		host : rest.emomoYunkong.host,
		port : rest.emomoYunkong.port,
		path : rest.emomoYunkong.errorDevice,
		body : JSON.stringify(body)
	}

	http.doPost(restFulPotion,function(status,d){
	
		if(d!= undefined && status == 200 && d.code == "0"){
			data.data = d.data;
			data.totalPages = d.data.totalPages;
			res.render("errorDevice",data);
		}else{
			utils.pageMessage(req,res,d.mes,"/error/devicepage","error","errorDevice");
		}
	});
});



router.get('/orderpage', function(req, res, next) {
	var uid = req.session.user.uid;
	var currentPage = 1;

	var data ={}
	data.PRO_MENU = {"menu":"error","subMenu":"errorOrder"};
	data.currentPage = currentPage;
	data.code = 0 ;
	data.name ='';

	var body = {
		uid:uid,
		currentPage:currentPage,
		pageSize:PAGE_SIZE,
	};

	var restFulPotion = {
		host : rest.emomoYunkong.host,
		port : rest.emomoYunkong.port,
		path : rest.emomoYunkong.errorOrder,
		body : JSON.stringify(body)
	}

	http.doPost(restFulPotion,function(status,d){
	
		if(d!= undefined && status == 200 && d.code == "0"){
			data.data = d.data;
			data.totalPages = d.data.totalPages;
			res.render("errorOrder",data);
		}else{
			utils.pageMessage(req,res,d.mes,"/error/orderpage","error","errorOrder");
		}
	});
});

router.post('/orderpage', function(req, res, next) {

	console.log(req.body);

	var uid = req.session.user.uid;	
	var currentPage = req.body.currentPage;
	var name = req.body.name;

	var data ={}
	data.PRO_MENU = {"menu":"error","subMenu":"errorOrder"};
	data.currentPage = currentPage;
	data.code =req.body.code ;
	data.name =req.body.name;

	var body = {
		uid:uid,
		currentPage:currentPage,
		pageSize:PAGE_SIZE,
	};

	if (name!='') {
	    var code = parseInt(req.body.code)
		switch(code){
			case 0:
            	break;
        	case 1: 
            	body.regionName =name; 
            	break;
        	case 2:
            	body.devNumber =name; 
            	break;
		}
	}

	var restFulPotion = {
		host : rest.emomoYunkong.host,
		port : rest.emomoYunkong.port,
		path : rest.emomoYunkong.errorOrder,
		body : JSON.stringify(body)
	}

	http.doPost(restFulPotion,function(status,d){
		
		if(d!= undefined && status == 200 && d.code == "0"){
			data.data = d.data;
			data.totalPages = d.data.totalPages;
			res.render("errorOrder",data);
		}else{
			utils.pageMessage(req,res,d.mes,"/error/orderpage","error","errorOrder");
		}
	});
});
module.exports = router;